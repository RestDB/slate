<h1 id='data-collection-api'>Data Collection API</h1>
<p>The <a href="https://en.wikipedia.org/wiki/Representational_state_transfer">Restful</a> API automatically reflects your database schema. All restdb.io databases have a unique URL as a REST endpoint.Â Client applications communicate through the URL with JSON objects. A database collection (same as a SQL table) contains your JSON documents. </p>
<h2 id='get-data-list-from-a-collection'>GET data list from a collection</h2>
<blockquote>
<p>Example code to GET data list from a collection:</p>
</blockquote>
<pre class="highlight shell tab-shell"><code><span class="c"># With shell, you can just pass the correct header with each request</span>
curl -g -X GET <span class="se">\</span>
  <span class="s1">'https://sports-xf03.restdb.io/rest/companies?q={"status":"professional"}&amp;sort=score&amp;max=10'</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -H <span class="s1">'cache-control: no-cache'</span> <span class="se">\</span>
  -H <span class="s1">'x-apikey: 73bf145c901d1feecf80c26a9d0d1a64aa145'</span>
</code></pre><pre class="highlight javascript tab-javascript--node"><code><span class="c1">// Node.js Javascript</span>
<span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">"request"</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span> <span class="na">method</span><span class="p">:</span> <span class="s1">'GET'</span><span class="p">,</span>
  <span class="na">url</span><span class="p">:</span> <span class="s1">'https://sports-xf03.restdb.io/rest/companies'</span><span class="p">,</span>
  <span class="na">qs</span><span class="p">:</span> 
   <span class="p">{</span> <span class="na">q</span><span class="p">:</span> <span class="s1">'{%22status%22:%22professional%22}'</span><span class="p">,</span>
     <span class="na">sort</span><span class="p">:</span> <span class="s1">'score'</span><span class="p">,</span>
     <span class="na">max</span><span class="p">:</span> <span class="s1">'10'</span> <span class="p">},</span>
  <span class="na">headers</span><span class="p">:</span> 
   <span class="p">{</span> <span class="s1">'x-apikey'</span><span class="p">:</span> <span class="s1">'73bf145c901d1feecf80c26a9d0d1a64aa145'</span><span class="p">,</span>
     <span class="s1">'cache-control'</span><span class="p">:</span> <span class="s1">'no-cache,no-cache'</span><span class="p">,</span>
     <span class="s1">'Content-Type'</span><span class="p">:</span> <span class="s1">'application/json'</span> <span class="p">}</span> <span class="p">};</span>

<span class="nx">request</span><span class="p">(</span><span class="nx">options</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">response</span><span class="p">,</span> <span class="nx">body</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>

  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
<span class="p">});</span>
</code></pre><pre class="highlight javascript tab-javascript--browser"><code><span class="c1">// Browser version</span>
<span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>

<span class="kd">var</span> <span class="nx">xhr</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">();</span>
<span class="nx">xhr</span><span class="p">.</span><span class="nx">withCredentials</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>

<span class="nx">xhr</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">"readystatechange"</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">===</span> <span class="mi">4</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">responseText</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">});</span>

<span class="nx">xhr</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s2">"GET"</span><span class="p">,</span> <span class="s2">"https://sports-xf03.restdb.io/rest/companies?q={%22status%22:%22professional%22}&amp;sort=score&amp;max=10"</span><span class="p">);</span>
<span class="nx">xhr</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">"Content-Type"</span><span class="p">,</span> <span class="s2">"application/json"</span><span class="p">);</span>
<span class="nx">xhr</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">"cache-control"</span><span class="p">,</span> <span class="s2">"no-cache,no-cache"</span><span class="p">);</span>
<span class="nx">xhr</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">"x-apikey"</span><span class="p">,</span> <span class="s2">"73bf145c901d1feecf80c26a9d0d1a64aa145"</span><span class="p">);</span>

<span class="nx">xhr</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</code></pre><pre class="highlight python tab-python"><code><span class="c"># Using the request library</span>
<span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">"https://sports-xf03.restdb.io/rest/companies"</span>

<span class="n">querystring</span> <span class="o">=</span> <span class="p">{</span><span class="s">"q"</span><span class="p">:</span><span class="s">"{</span><span class="si">%22</span><span class="s">status</span><span class="si">%22</span><span class="s">:</span><span class="si">%22</span><span class="s">professional</span><span class="si">%22</span><span class="s">}"</span><span class="p">,</span><span class="s">"sort"</span><span class="p">:</span><span class="s">"score"</span><span class="p">,</span><span class="s">"max"</span><span class="p">:</span><span class="s">"10"</span><span class="p">}</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">"application/json"</span><span class="p">,</span>
    <span class="s">'cache-control'</span><span class="p">:</span> <span class="s">"no-cache,no-cache"</span><span class="p">,</span>
    <span class="s">'x-apikey'</span><span class="p">:</span> <span class="s">"73bf145c901d1feecf80c26a9d0d1a64aa145"</span>
    <span class="p">}</span>

<span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="s">"GET"</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="n">querystring</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
</code></pre><pre class="highlight java tab-java"><code><span class="n">HttpResponse</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">Unirest</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"https://sports-xf03.restdb.io/rest/companies?q={%22status%22:%22professional%22}&amp;sort=score&amp;max=10"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="s">"cache-control"</span><span class="o">,</span> <span class="s">"no-cache,no-cache"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="s">"x-apikey"</span><span class="o">,</span> <span class="s">"73bf145c901d1feecf80c26a9d0d1a64aa145"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">asString</span><span class="o">();</span>
</code></pre><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>

<span class="nv">$request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">HttpRequest</span><span class="p">();</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setUrl</span><span class="p">(</span><span class="s1">'https://sports-xf03.restdb.io/rest/companies'</span><span class="p">);</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setMethod</span><span class="p">(</span><span class="nx">HTTP_METH_GET</span><span class="p">);</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setQueryData</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
  <span class="s1">'q'</span> <span class="o">=&gt;</span> <span class="s1">'{%22status%22:%22professional%22}'</span><span class="p">,</span>
  <span class="s1">'sort'</span> <span class="o">=&gt;</span> <span class="s1">'score'</span><span class="p">,</span>
  <span class="s1">'max'</span> <span class="o">=&gt;</span> <span class="s1">'10'</span>
<span class="p">));</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setHeaders</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
  <span class="s1">'x-apikey'</span> <span class="o">=&gt;</span> <span class="s1">'73bf145c901d1feecf80c26a9d0d1a64aa145'</span><span class="p">,</span>
  <span class="s1">'cache-control'</span> <span class="o">=&gt;</span> <span class="s1">'no-cache,no-cache'</span><span class="p">,</span>
  <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'application/json'</span>
<span class="p">));</span>

<span class="k">try</span> <span class="p">{</span>
  <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>

  <span class="k">echo</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">();</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">HttpException</span> <span class="nv">$ex</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$ex</span><span class="p">;</span>
<span class="p">}</span>
</code></pre><pre class="highlight csharp tab-csharp"><code><span class="kt">var</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">RestClient</span><span class="p">(</span><span class="s">"https://sports-xf03.restdb.io/rest/companies?q={%22status%22:%22professional%22}&amp;sort=score&amp;max=10"</span><span class="p">);</span>
<span class="kt">var</span> <span class="n">request</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">RestRequest</span><span class="p">(</span><span class="n">Method</span><span class="p">.</span><span class="n">GET</span><span class="p">);</span>
<span class="n">request</span><span class="p">.</span><span class="nf">AddHeader</span><span class="p">(</span><span class="s">"x-apikey"</span><span class="p">,</span> <span class="s">"73bf145c901d1feecf80c26a9d0d1a64aa145"</span><span class="p">);</span>
<span class="n">request</span><span class="p">.</span><span class="nf">AddHeader</span><span class="p">(</span><span class="s">"cache-control"</span><span class="p">,</span> <span class="s">"no-cache,no-cache"</span><span class="p">);</span>
<span class="n">request</span><span class="p">.</span><span class="nf">AddHeader</span><span class="p">(</span><span class="s">"Content-Type"</span><span class="p">,</span> <span class="s">"application/json"</span><span class="p">);</span>
<span class="n">IRestResponse</span> <span class="n">response</span> <span class="p">=</span> <span class="n">client</span><span class="p">.</span><span class="nf">Execute</span><span class="p">(</span><span class="n">request</span><span class="p">);</span>
</code></pre><pre class="highlight swift tab-swift"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="k">let</span> <span class="nv">headers</span> <span class="o">=</span> <span class="p">[</span>
  <span class="s">"Content-Type"</span><span class="p">:</span> <span class="s">"application/json"</span><span class="p">,</span>
  <span class="s">"cache-control"</span><span class="p">:</span> <span class="s">"no-cache,no-cache"</span><span class="p">,</span>
  <span class="s">"x-apikey"</span><span class="p">:</span> <span class="s">"73bf145c901d1feecf80c26a9d0d1a64aa145"</span>
<span class="p">]</span>

<span class="k">let</span> <span class="nv">request</span> <span class="o">=</span> <span class="kt">NSMutableURLRequest</span><span class="p">(</span><span class="nv">url</span><span class="p">:</span> <span class="kt">NSURL</span><span class="p">(</span><span class="nv">string</span><span class="p">:</span> <span class="s">"https://sports-xf03.restdb.io/rest/companies?q={%22status%22:%22professional%22}&amp;sort=score&amp;max=10"</span><span class="p">)</span><span class="o">!</span> <span class="k">as</span> <span class="kt">URL</span><span class="p">,</span>
                                        <span class="nv">cachePolicy</span><span class="p">:</span> <span class="o">.</span><span class="n">useProtocolCachePolicy</span><span class="p">,</span>
                                    <span class="nv">timeoutInterval</span><span class="p">:</span> <span class="mf">10.0</span><span class="p">)</span>
<span class="n">request</span><span class="o">.</span><span class="n">httpMethod</span> <span class="o">=</span> <span class="s">"GET"</span>
<span class="n">request</span><span class="o">.</span><span class="n">allHTTPHeaderFields</span> <span class="o">=</span> <span class="n">headers</span>

<span class="k">let</span> <span class="nv">session</span> <span class="o">=</span> <span class="kt">URLSession</span><span class="o">.</span><span class="n">shared</span>
<span class="k">let</span> <span class="nv">dataTask</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="nf">dataTask</span><span class="p">(</span><span class="nv">with</span><span class="p">:</span> <span class="n">request</span> <span class="k">as</span> <span class="kt">URLRequest</span><span class="p">,</span> <span class="nv">completionHandler</span><span class="p">:</span> <span class="p">{</span> <span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">response</span><span class="p">,</span> <span class="n">error</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Void</span> <span class="k">in</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">error</span> <span class="o">!=</span> <span class="kc">nil</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">httpResponse</span> <span class="o">=</span> <span class="n">response</span> <span class="k">as?</span> <span class="kt">HTTPURLResponse</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">httpResponse</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">})</span>

<span class="n">dataTask</span><span class="o">.</span><span class="nf">resume</span><span class="p">()</span>
</code></pre>
<blockquote>
<p>Example output:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">[</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Jane"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"amateur"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"score"</span><span class="p">:</span><span class="w"> </span><span class="mi">42</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre>
<p><strong>HTTP REQUEST</strong></p>

<p><code>GET https://{mydatabase}.restdb.io/rest/{collection}[?query parameters]</code></p>
<h3 id='url-parameters'>URL Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code>{mydatabase}</code> <small>mandatory</small></td>
<td>Your unique database name, e.g. <code>sports-xf03</code></td>
</tr>
<tr>
<td><code>{collection}</code> <small>mandatory</small></td>
<td>A unique collection name in your database, e.g. <code>players</code></td>
</tr>
</tbody></table>
<h3 id='optional-query-parameters'>Optional query parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>q</td>
<td><code>{}</code></td>
<td>Database Query. JSON format</td>
</tr>
<tr>
<td>h</td>
<td><code>{}</code></td>
<td><a href="#query-hints">Query hints</a> for Query and output. JSON format</td>
</tr>
<tr>
<td>filter</td>
<td></td>
<td>Free text search filter</td>
</tr>
<tr>
<td>sort</td>
<td><code>_id</code></td>
<td>Field to sort query result on</td>
</tr>
<tr>
<td>dir</td>
<td><code>-1</code></td>
<td>Sort direction, -1 = ascending, 1 = descending</td>
</tr>
<tr>
<td>skip</td>
<td><code>0</code></td>
<td>Skip forward in result data set</td>
</tr>
<tr>
<td>max</td>
<td><code>1000</code></td>
<td>Data result page size</td>
</tr>
<tr>
<td>metafields</td>
<td></td>
<td>Add system fields in data result. See <a href="#meta-fields">meta fields</a></td>
</tr>
<tr>
<td>totals</td>
<td></td>
<td>Return data and paging meta data. See <a href="#data-result-paging">data result paging</a></td>
</tr>
<tr>
<td>groupby</td>
<td></td>
<td>Group data by field</td>
</tr>
<tr>
<td>aggregate</td>
<td></td>
<td>Aggregae data by field</td>
</tr>
<tr>
<td>apikey</td>
<td></td>
<td>Add an apikey in as request parameter instead of as a header value (not recommended)</td>
</tr>
<tr>
<td>idtolink</td>
<td></td>
<td>URLs for links and images</td>
</tr>
<tr>
<td>flatten</td>
<td></td>
<td>Place deep properies on root object</td>
</tr>
<tr>
<td>referencedby</td>
<td></td>
<td>refs</td>
</tr>
<tr>
<td>fetchmediadata</td>
<td></td>
<td>media</td>
</tr>
<tr>
<td>fetchchildren</td>
<td></td>
<td>child data</td>
</tr>
<tr>
<td>format</td>
<td></td>
<td>.js or .html</td>
</tr>
</tbody></table>
<h2 id='get-data-item-from-a-collection'>GET data item from a collection</h2>
<p>Get one data item by the unique document <code>_id</code> from a collection.</p>

<p><strong>HTTP REQUEST</strong></p>

<blockquote>
<p>Example code to GET one item:</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>curl -X GET <span class="se">\</span>
  https://sports-xf03.restdb.io/rest/companies/570e052d98290e490000006e <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -H <span class="s1">'cache-control: no-cache,no-cache'</span> <span class="se">\</span>
  -H <span class="s1">'x-apikey: 73bf145c901d1feecf80c26a9d0d1a64aa145'</span>
</code></pre>
<blockquote>
<p>Example output:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Jane"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"amateur"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"score"</span><span class="p">:</span><span class="w"> </span><span class="mi">42</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p><code>GET https://{mydatabase}.restdb.io/rest/{collection}/{ID}</code></p>
<h3 id='url-parameters-2'>URL Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code>{mydatabase}</code> <small>mandatory</small></td>
<td>Your unique database name, e.g. <code>sports-xf03</code></td>
</tr>
<tr>
<td><code>{collection}</code> <small>mandatory</small></td>
<td>A unique collection name in your database, e.g. <code>players</code></td>
</tr>
<tr>
<td><code>{ID}</code> <small>mandatory</small></td>
<td>A unique document ID, e.g. <code>570e052d98290e490000006e</code></td>
</tr>
</tbody></table>

<hr/>
<h3 id='data-result-paging'>Data result paging</h3>
<blockquote>
<p>Data result paging output example below:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5631d356f941f479000000ea"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Fames Institute"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"8557 Elit, Rd."</span><span class="p">,</span><span class="w">
            </span><span class="s2">"city"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Goslar"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"zip"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Z2 8KA"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5631d356f941f47900000109"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Urna LLP"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"P.O. Box 108, 7946 Erat Avenue"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"city"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Morpeth"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"zip"</span><span class="p">:</span><span class="w"> </span><span class="s2">"K1Z 2TI"</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="s2">"totals"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"total"</span><span class="p">:</span><span class="w"> </span><span class="mi">102</span><span class="p">,</span><span class="w">
        </span><span class="s2">"count"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w">
        </span><span class="s2">"skip"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w">
        </span><span class="s2">"max"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Use the totals query parameter to retrieve data about totals, page size and page skipping.</p>

<p>The example query URL below shows an example:</p>

<p><code>GET https://sports-xf03.restdb.io/rest/companies?totals=true&amp;skip=10&amp;max=2</code></p>
<h3 id='header-values'>Header values</h3>
<p>bal bla</p>
<h3 id='query-hints'>Query hints</h3>
<table><thead>
<tr>
<th>Hint</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code>$fields</code></td>
<td>Show or hide fields in the output data result set. E.g. <code>h={&quot;$fields&quot;:{&quot;title&quot;:1, &quot;age&quot;: 0}</code>. Mixing values 0 and 1 are not allowed</td>
</tr>
<tr>
<td><code>$max</code></td>
<td>Max records returnes by query. E.g. <code>h={&quot;$max&quot;: 20}</code></td>
</tr>
<tr>
<td><code>$skip</code></td>
<td>Skip records. E.g. <code>h={&quot;$skip&quot;: 100}</code></td>
</tr>
<tr>
<td><code>$orderby</code></td>
<td>Sort by field(s). E.g. <code>h={&quot;$orderby&quot;: {&quot;salary&quot;: 1, &quot;age&quot;: -1}</code></td>
</tr>
<tr>
<td><code>$groupby</code></td>
<td>Group data by field(s). E.g. <code>h={&quot;$groupby&quot;:[&quot;age&quot;, &quot;position&quot;}</code>. See <a href="#aggregation">aggregation</a></td>
</tr>
<tr>
<td><code>$aggregate</code></td>
<td>Aggregate data by expression(s). <code>h={&quot;$aggregate&quot;:[&quot;SUM:score&quot;]}</code>. See <a href="#aggregation">aggregation</a></td>
</tr>
</tbody></table>
<h3 id='meta-fields'>Meta fields</h3>
<blockquote>
<p>Example output data with metafields:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">[</span><span class="w">
  </span><span class="p">{</span><span class="w">
        </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5631d356f941f47900000110"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Nullam Suscipit Est Limited"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"P.O. Box 460, 4937 Non, Street"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"city"</span><span class="p">:</span><span class="w"> </span><span class="s2">"La Magdeleine"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"zip"</span><span class="p">:</span><span class="w"> </span><span class="s2">"AX6 7KK"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"_keywords"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="s2">"nullam"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"suscipit"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"est"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"limited"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"p"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"o"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"box"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"460"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"4937"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"non"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"street"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"la"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"magdeleine"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"ax6"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"7kk"</span><span class="w">
        </span><span class="p">],</span><span class="w">
        </span><span class="s2">"_tags"</span><span class="p">:</span><span class="w"> </span><span class="s2">"nullam suscipit est limited p o box 460 4937 non street la magdeleine ax6 7kk"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"_version"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
        </span><span class="s2">"_created"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2015-10-29T08:05:41.947Z"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"_createdby"</span><span class="p">:</span><span class="w"> </span><span class="s2">"jones@restdb.io"</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre>
<p>The example query URL below show how metafields are return with the user data.</p>

<p><code>GET https://sports-xf03.restdb.io/rest/companies?&amp;metafields=true</code></p>

<table><thead>
<tr>
<th>Metafield</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code>_id</code></td>
<td>Unique document ID</td>
</tr>
<tr>
<td><code>_keywords</code></td>
<td>Array of unique words from the JSON document</td>
</tr>
<tr>
<td><code>_tags</code></td>
<td>Text string of unique words from the JSON document</td>
</tr>
<tr>
<td><code>_version</code></td>
<td>Number inncremented of each update</td>
</tr>
<tr>
<td><code>_created</code></td>
<td>ISO Date string from the document creation time</td>
</tr>
<tr>
<td><code>_createdby</code></td>
<td>Username (email) for the authenticated user that created the document</td>
</tr>
<tr>
<td><code>_changed</code></td>
<td>ISO Date string from the document update time</td>
</tr>
<tr>
<td><code>_changedby</code></td>
<td>Email/username for the authenticated user that changed the document</td>
</tr>
</tbody></table>
<h2 id='query-language'>Query language</h2>
<p>bla bla</p>
<h3 id='logic'>Logic</h3>
<p>bla bla</p>
<h3 id='aggregation'>Aggregation</h3>
<p>bla bla</p>
<h2 id='post-resource'>POST resource</h2>
<p>bla bla</p>
<h3 id='data-payload'>Data payload</h3>
<p>bla bla</p>
<h3 id='using-post-to-emulate-put-delete-patch'>Using POST to emulate PUT, DELETE, PATCH</h3>
<p>If your development platform or firewall rules prevent you from calling HTTP methods like PUT, PATCH or DELETE, use the <code>X-HTTP-Method-Override</code> header. Pass the method you want to use in the X-HTTP-Method-Override header and make your call using the POST method.</p>
