<h1 id='authentication'>Authentication</h1>
<p>API calls against your database REST API must be authenticated. </p>

<blockquote>
<p>Example code for an authenticated API call:</p>
</blockquote>
<pre class="highlight shell tab-shell"><code><span class="c"># With shell, you can just pass the correct header with each request</span>
curl -k -i -H <span class="s2">"Content-Type: application/json"</span><span class="se">\</span>
 -H <span class="s2">"x-apikey: MY-API-KEY-HERE"</span><span class="se">\</span>
 -X GET <span class="s1">'https://{mydatabase}.restdb.io/rest/people'</span>
</code></pre>
<blockquote>
<p>Make sure to replace <code>MY-API-KEY-HERE</code> with your actual API key.</p>
</blockquote>

<p>Authentication can be done with one of the following methods:</p>

<ul>
<li><strong>API key</strong> as a query parameter, e.g. <code>?apikey=xxxxx</code></li>
<li><strong>API key</strong> as a HTTP header field, e.g. <code>x-apikey=xxxxx</code></li>
<li><strong>Signed JWT token</strong> as a HTTP header field, <code>Authorization=Bearer xxxxx</code></li>
</ul>

<p>You can create your API keys on the admin dashboard of your database, shown in the example screenshot below.</p>

<p><img src="https://ras-blogdb.restdb.io/media/5bfe8b971c8eea7400002e95" alt="admin dashboard" /></p>

<aside class="warning">
For security reasons, only HTTPS is allowed for connecting to your database API.
</aside>
<h2 id='cors-api-keys'>CORS API keys</h2>
<blockquote>
<p>Ajax call via CORS:</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="c1">// Call API from a web browser requires a CORS enabled API key</span>
<span class="kd">var</span> <span class="nx">myCorsApiKey</span> <span class="o">=</span> <span class="s2">"{MY-CORS-API-KEY-HERE}"</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>

<span class="kd">var</span> <span class="nx">xhr</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">();</span>
<span class="nx">xhr</span><span class="p">.</span><span class="nx">withCredentials</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>

<span class="nx">xhr</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">"readystatechange"</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">===</span> <span class="mi">4</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">responseText</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">});</span>

<span class="nx">xhr</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s2">"GET"</span><span class="p">,</span> <span class="s2">"https://{mydatabase}.restdb.io/rest/people"</span><span class="p">);</span>
<span class="nx">xhr</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">"content-type"</span><span class="p">,</span> <span class="s2">"application/json"</span><span class="p">);</span>
<span class="nx">xhr</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">"x-apikey"</span><span class="p">,</span> <span class="nx">myCorsApiKey</span><span class="p">);</span>
<span class="nx">xhr</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">"cache-control"</span><span class="p">,</span> <span class="s2">"no-cache"</span><span class="p">);</span>

<span class="nx">xhr</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</code></pre>
<p>To connect to your database from a web page, a valid Ajax call with CORS must be done. CORS (cross-origin resource sharing) manages cross-origin requests. A CORS enabled API-key controls who can access the database and valid HTTP verbs agaists a data resource, i.e. <code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>PATCH</code> and <code>DELETE</code>.</p>

<p>You can manage your API-keys unders the Settings/API tab.</p>

<p><img src="https://ras-blogdb.restdb.io/media/5603c3353c55510300000004?s=w" alt="CORS settings" /></p>
<h2 id='auth0-com-jwt-tokens'>Auth0.com JWT tokens</h2>
<p>RestDB supports direct integration with the auth0.com authentication service. JWT (<a href="https://jwt.io/">JSON Web Token</a>) are signed with your Auth0 secret and verified by RestDB using the same secret.</p>

<p>You can manage the Auth0.com secret under Settings/Authentication</p>

<p><img src="https://ras-blogdb.restdb.io/media/5c04e23f587d725400000745?s=w" alt="Auth0.com secret" /></p>
<h2 id='users-and-secure-tokens-api'>Users and secure tokens API</h2>
<p><strong>HTTP REQUEST</strong></p>
<pre class="highlight shell tab-shell"><code>bin bash
</code></pre>
<blockquote>
<p>Example output
<code>json
{
  &quot;data&quot;: &quot;value&quot;
}
</code></p>
</blockquote>

<p><code>POST https://{mydatabase}.restdb.io/auth/token</code></p>

<p>The <code>POST</code> body Request body can be an access token or JWT token.</p>

<p><strong>ARGUMENTS</strong></p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Required</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code>code</code></td>
<td><code>string</code></td>
<td>Optional</td>
<td>Your access code</td>
</tr>
<tr>
<td><code>refresh</code></td>
<td><code>string</code></td>
<td>Optional</td>
<td>Your JWT token</td>
</tr>
</tbody></table>

<aside class="warning">
*HTTPS is required. The restdb.io database REST API only responds to encrypted traffic so that your data remains safe. All API traffic must have a valid apikey or a JWT token.
</aside>
